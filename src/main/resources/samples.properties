
examples = Examples

examples.chapters.customRenderer.heading = Custom Renderer
examples.chapters.emphasis.heading       = Emphasis
examples.chapters.escaping.heading       = Escaping
examples.chapters.headers.heading        = Headers
examples.chapters.lists.heading          = Lists
examples.chapters.lists.intro            = The first block element appended to a list item must always be a paragraph. Meaning text only. But further block elements can be added and they can be of any type. They will align nicely with the list items indent.
examples.chapters.md.heading             = Static Utility Class `MD`
examples.chapters.md.intro               = The utility class `MD` features many static methods for convenient element building. Add static imports as shown in the comments in the sample method for even less verbose markdowning.
examples.chapters.paragraphs.heading     = Paragraphs and Line Breaks
examples.chapters.paragraphs.intro       = The two most important elements when working with Markdown Builder are block elements and span elements. Block elements are separated from each other by a blank line and render as a paragraph.
examples.chapters.taskLists.heading      = Task Lists
examples.chapters.taskLists.intro        = Note: This is a non-standard element and might not be supported by all markdown renderers.
examples.heading                         = Examples
examples.heading.code                    = Java Code
examples.heading.markdown                = Markdown
examples.heading.rendered                = Rendered

introduction.heading = Java Markdown Builder
introduction.text    = A lightweight library for generating pretty printed markdown. No external dependencies except JUnit are used. This README.md file was generated with Markdown Builder.
